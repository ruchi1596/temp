{
        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adminPassword": {
			"type": "securestring"
		},
		"location": {
			"type": "string",
			"metadata": {
				"description": "Location to deploy"
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Unique name for the Storage Account where the machines disks will be placed."
			}
		},
		"storageAccountType": {
			"defaultValue": "Standard_LRS",
			"type": "string",
			"metadata": {
				"description": "Type of Storage Account chosen"
			}
		},
		"storageAccountNewOrExisting": {
			"type": "string",
			"defaultValue": "new",
			"allowedValues": [
				"new",
				"existing"
			],
			"metadata": {
				"description": "Storage Account chosen new or existing"
			}
		},
		"storageAccountResourceGroup": {
			"type": "string",
			"defaultValue": "[resourceGroup().name]",
			"metadata": {
				"description": "Resource group of existing storage account(if existing is chosen)"
			}
		},
		"deploymentType": {
			"type": "string",
			"allowedValues": [
				"BYOL",
				"PAYG"
			],
			"defaultValue": "BYOL",
			"metadata": {
				"description": "type of deployment"
			}
		},
                "firmware": {
                        "type": "string",
                        "allowedValues": [
                                 "9.2.101504",
                                 "10.0.002002",
                                 "latest"
                        ],
                        "defaultValue": "latest",
                        "metadata": {
                                "description": "Firmware version"
                        }
                },
		"vmName": {
			"type": "string"
		},
		"dnsNameForIP": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the WAF."
			}
		},
		"publicIPAddressName": {
			"type": "string"
		},
		"publicIPSku": {
		        "type": "string"
		},
		"publicIPAllocation": {
		        "type": "string"
		},
		"vNETNewOrExisting1": {
			"type": "string",
			"defaultValue": "new",
			"allowedValues": [
				"new",
				"existing"
			],
			"metadata": {
				"description": "Storage Account chosen new or existing"
			}
		},
                "vNETNewOrExisting2": {
                        "type": "string",
                        "defaultValue": "new",
                        "allowedValues": [
                                "new",
                                "existing"
                        ],
                        "metadata": {
                                "description": "Storage Account chosen new or existing"
                        }
                },
		"vNETResourceGroup1": {
			"type": "string",
			"defaultValue": "[resourceGroup().name]",
			"metadata": {
				"description": "VNET Resource Group Name(if an existing VNET is used)."
			}
		},
		"vNETResourceGroup2": {
                        "type": "string",
                        "defaultValue": "[resourceGroup().name]",
                        "metadata": {
                                "description": "VNET Resource Group Name(if an existing VNET is used)."
                        }
                },
		"vNETNameSinglenic": {
			"type": "string",
			"defaultValue": "vnet"
		},
		"vNETNameMultinic": {
		        "type": "string",
		        "defaultValue": "vnet"	
		},
		"addressPrefixSingleNic": {
			"defaultValue": "10.0.0.0/16",
			"type": "string",
			"metadata": {
				"description": "Address prefix of the network for Barracuda VM."
			}
		},
		"addressPrefixMultiNic": {
			"defaultValue": "10.0.0.0/16",
			"type": "string",
			"metadata": {
				"description": "Address prefix of the network for Barracuda VM."
			}
		},
		"subnetPrefixSingleNic": {
			"defaultValue": "10.0.0.0/24",
			"type": "string",
			"metadata": {
				"description": "Subnet prefix of the network for Barracuda VM."
			}
		},
                "subnetPrefixMultiNic": {
                        "defaultValue": "10.0.0.0/24",
                        "type": "string",
                        "metadata": {
                                "description": "Subnet prefix of the network for Barracuda VM."
                        }
                },
                "subnet2PrefixMultiNic": {
                        "defaultValue": "10.0.1.0/24",
                        "type": "string",
                        "metadata": {
                                "description": "Subnet prefix of the network for Barracuda VM."
                        }
                },
		"networkInterfaceType": {
			"type": "bool",
			"allowedValues": [
				false,
				true
			],
			"defaultValue": false,
			"metadata": {
				"description": "Select wheter you want a single NIC or multi NIC machine"
			}
		},
		"subnetNameSingleNic": {
			"type": "string",
			"defaultValue": "subnet1"
		},
                "subnetNameMultiNic": {
                        "type": "string",
			"defaultValue": "subnet1"
                },		
		"subnet2NameMultiNic": {
			"type": "string",
                        "defaultValue": "null"
		},
		"vmSize": {
			"type": "string",
			"metadata": {
				"description": "Size of instances"
			}
		},
                "bootDiag": {
                       "type": "bool",
                       "defaultValue": true,
                       "metadata": {
                               "description": "Enable boot diagnostics for the vmss instances."
                       }
                }
	},
	"variables": {
		"nicName0Prefix": "[concat(parameters('vmName'),'NIC')]",
		"nicName1Prefix": "[concat(parameters('vmName'),'-LAN_NIC')]",
		"vNetName": "[if(equals(parameters('networkInterfaceType'),bool('false')),parameters('vNETNameSinglenic'), parameters('vNETNameMultinic'))]",
		"vnetNewEXisting": "[if(equals(parameters('networkInterfaceType'),bool('false')),parameters('vNETNewOrExisting1'), parameters('vNETNewOrExisting2'))]",
		"vnetRg": "[if(equals(parameters('networkInterfaceType'),bool('false')),parameters('vNETResourceGroup1'), parameters('vNETResourceGroup2'))]",
		"addressprefix": "[if(equals(parameters('networkInterfaceType'),bool('false')),parameters('addressPrefixSingleNic'), parameters('addressPrefixMultiNic'))]",
		"subnet1": "[if(equals(parameters('networkInterfaceType'),bool('false')),parameters('subnetNameSingleNic'), parameters('subnetNameMultiNic'))]",
		"subnet1prefix": "[if(equals(parameters('networkInterfaceType'),bool('false')),parameters('subnetPrefixSingleNic'), parameters('subnetPrefixMultiNic'))]",
		"nsgVar": "[concat(parameters('vmName'),'NSG')]",
		"vnetID": "[resourceId(variables('vnetRg'), 'Microsoft.Network/virtualNetworks', variables('vNetName'))]",
		"subnet0Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1'))]",
		"subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2NameMultiNic'))]",
		"storageAccountTier": "[replace(parameters('storageAccountType'),'_LRS','')]",
		"useNewStorageAccount": "[equals(parameters('storageAccountNewOrExisting'), 'new')]",
		"useNewVnet": "[equals(variables('vnetNewEXisting'), 'new')]",
		"barracudaNetworksTags": {
			"type": "object",
			"provider": "3285C15D-A16F-479C-8886-67042BCB03A9"
		},
		"publicIp1": {
			"id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
		},
		"vnetIp1": {
			"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgVar'))]"
		},
		"netPro0": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName0Prefix'))]",
		"netPro1": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName1Prefix'))]",
		"osDiskName": "[concat(parameters('vmName'), '-', 'wafosdisk', '-', uniquestring(parameters('vmName')))]"
	},
	"resources": [{
			"apiVersion": "2018-07-01",
			"type": "Microsoft.Storage/storageAccounts",
			"condition": "[variables('useNewStorageAccount')]",
			"name": "[parameters('storageAccountName')]",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "wafStorageName",
				"provider": "[variables('barracudaNetworksTags').provider]"
			},
			"kind": "Storage",
			"sku": {
				"name": "[parameters('storageAccountType')]",
				"tier": "[variables('storageAccountTier')]"
			}
		},
		{
			"apiVersion": "2018-05-01",
			"type": "Microsoft.Network/virtualNetworks",
			"condition": "[variables('useNewVnet')]",
			"name": "[variables('vNetName')]",
			"location": "[parameters('location')]",
			"tags": {
				"provider": "[variables('barracudaNetworksTags').provider]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgVar'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressprefix')]"
					]
				},
				"copy": [{
					"name": "subnets",
					"count": "[if(equals(parameters('networkInterfaceType'),bool('false')),1, 2)]",
					"input": {
						"name": "[if(equals(copyIndex('subnets'),0),variables('subnet1'), parameters('subnet2NameMultiNic'))]",
						"properties": {
							"addressPrefix": "[if(equals(copyIndex('subnets'),0),variables('subnet1prefix'), parameters('subnet2PrefixMultiNic'))]",
							"networkSecurityGroup": "[if(equals(copyIndex('subnets'),0),variables('vnetIp1'), json('null'))]"
						}
					}
				}]
			}
		},
		{
			"apiVersion": "2018-05-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('publicIPAddressName')]",
			"location": "[parameters('location')]",
                        "sku": {
			        "name": "[parameters('publicIPSku')]"
			},
			"tags": {
				"displayName": "wafPublicIPAddress",
				"provider": "[variables('barracudaNetworksTags').provider]"
			},
			"properties": {
				"publicIPAllocationMethod": "[parameters('publicIPAllocation')]",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsNameForIP')]"
				}
			}
		},
		{
			"apiVersion": "2018-05-01",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('nsgVar')]",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "NSG-WAF",
				"provider": "[variables('barracudaNetworksTags').provider]"
			},
			"properties": {
				"securityRules": [{
						"name": "http-mgmt",
						"properties": {
							"description": "MGMT_-_HTTP",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "8000",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1010,
							"direction": "Inbound"
						}
					},
					{
						"name": "https",
						"properties": {
							"description": "HTTPS",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "443",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1020,
							"direction": "Inbound"
						}
					},
					{
						"name": "https-mgmt",
						"properties": {
							"description": "MGMT_-_HTTPS",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "8443",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1030,
							"direction": "Inbound"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2018-05-01",
			"copy": {
				"name": "nicloop",
				"count": "[if(equals(parameters('networkInterfaceType'),bool('false')),1, 2)]"
			},
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[if(equals(copyIndex(),0),variables('nicName0Prefix'), variables('nicName1Prefix'))]",
			"location": "[parameters('location')]",
			"tags": {
				"provider": "[variables('barracudaNetworksTags').provider]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/',variables('vNetName'))]",
				"[concat('Microsoft.Network/publicIPAddresses/',parameters('publicIPAddressName'))]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "[concat('ipconfig', copyIndex())]",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": "[if(equals(copyIndex(),0),variables('publicIp1'), json('null'))]",
						"subnet": {
							"id": "[if(equals(copyIndex(),0),variables('subnet0Ref'), variables('subnet1Ref'))]"
						}
					}
				}]
			}
		},
		{
			"apiVersion": "2018-06-01",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('vmName')]",
			"location": "[parameters('location')]",
			"tags": {
				"provider": "[variables('barracudaNetworksTags').provider]"
			},
			"plan": {
				"name": "[if(equals(parameters('deploymentType'),'BYOL'), 'byol', 'hourly')]",
				"Product": "waf",
				"Publisher": "barracudanetworks"
			},
			"dependsOn": [
				"nicloop",
				"[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[parameters('vmName')]",
					"adminUsername": "will-be-replaced-by-admin",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "barracudanetworks",
						"offer": "waf",
						"sku": "[if(equals(parameters('deploymentType'),'BYOL'), 'byol', 'hourly')]",
						"version": "[parameters('firmware')]"
					},
					"osDisk": {
						"name": "[variables('osDiskName')]",
						"vhd": {
							"uri": "[concat(reference(resourceId(parameters('storageAccountResourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2018-07-01').primaryEndpoints.blob, 'vhds/', variables('osDiskName'), '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"copy": [{
						"name": "networkInterfaces",
						"count": "[if(equals(parameters('networkInterfaceType'),bool('false')),1, 2)]",
						"input": {
							"id": "[if(equals(copyIndex('networkInterfaces'),0),variables('netPro0'), variables('netPro1'))]",
							"properties": {
								"primary": "[if(equals(copyIndex('networkInterfaces'), 0), bool('true'), bool('false'))]"
							}
						}
					}]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": "[parameters('bootDiag')]",
						"storageUri": "[reference(resourceId(parameters('storageAccountResourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2018-07-01').primaryEndpoints.blob]"
					}
				}
			}
		},
                {
                    "name": "pid-14d7ae0f-e0bd-413c-8bb4-adbdca0e3bdd",
                    "type": "Microsoft.Resources/deployments",
                    "apiVersion": "2018-07-01",
                    "properties": {
                        "mode": "Incremental",
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "resources": []
                         }
                     }
                }
	]
}


